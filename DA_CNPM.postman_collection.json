{
	"info": {
		"_postman_id": "a670380c-224c-4a30-826e-8be6546d90b7",
		"name": "DA_CNPM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36625190"
	},
	"item": [
		{
			"name": "initial_data",
			"item": [
				{
					"name": "admin_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create admin user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"admin\",\r\n    \"email\" : \"admin@gmail.com\",\r\n    \"password\" : \"1\",\r\n    \"phone\" : \"0905001001\",\r\n    \"role\" : \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create student user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"student\",\r\n    \"email\" : \"student@gmail.com\",\r\n    \"password\" : \"2\",\r\n    \"phone\" : \"0905002002\",\r\n    \"role\" : \"student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "organizer_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create student user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"org\",\r\n    \"email\" : \"organizer@gmail.com\",\r\n    \"password\" : \"3\",\r\n    \"phone\" : \"0905003003\",\r\n    \"role\" : \"organizer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "admin_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"admin login\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.environment.set(\"admin_token\",pm.response.json().data.token);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"admin@gmail.com\",\r\n    \"password\" : \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"student login\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.environment.set(\"student_token\",pm.response.json().data.token);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"student@gmail.com\",\r\n    \"password\" : \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "organizer_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"student login\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"token\");\r",
									"    pm.expect(pm.response.json().data).to.have.property(\"user\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.environment.set(\"organizer_token\",pm.response.json().data.token);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"organizer@gmail.com\",\r\n    \"password\" : \"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CreateEvent",
			"item": [
				{
					"name": "1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"    pm.environment.set(\"event_id\", pm.response.json().data.id);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Basketball Tournament\",\r\n    \"description\": \"The Annual Basketball Tournament promises to be an exciting showcase of athletic talent, sportsmanship, and team spirit. Teams from different faculties and departments will face off in a thrilling knockout competition, battling for the coveted championship trophy. Each game will be played under professional rules and officiated by certified referees to ensure fair play and an exhilarating experience for both players and spectators.\\n\\nBeyond the court, the tournament aims to foster a sense of community and camaraderie among students, encouraging healthy competition and mutual respect. In addition to the championship title, awards for the Most Valuable Player (MVP) and Best Defensive Player will be presented at the closing ceremony. Everyone is invited to cheer for their favorite teams and be part of the vibrant energy that makes this event one of the most anticipated of the year.\",\r\n    \"location\": \"University Sports Complex\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"10:00:00\",\r\n    \"point\": \"8\",\r\n    \"capacity\": 16,\r\n    \"category\": \"Sports\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"    pm.environment.set(\"test_event_id\", pm.response.json().data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Basketball Tournament\",\r\n    \"description\": \"The Annual Basketball Tournament promises to be an exciting showcase of athletic talent, sportsmanship, and team spirit. Teams from different faculties and departments will face off in a thrilling knockout competition, battling for the coveted championship trophy. Each game will be played under professional rules and officiated by certified referees to ensure fair play and an exhilarating experience for both players and spectators.\\n\\nBeyond the court, the tournament aims to foster a sense of community and camaraderie among students, encouraging healthy competition and mutual respect. In addition to the championship title, awards for the Most Valuable Player (MVP) and Best Defensive Player will be presented at the closing ceremony. Everyone is invited to cheer for their favorite teams and be part of the vibrant energy that makes this event one of the most anticipated of the year.\",\r\n    \"location\": \"University Sports Complex\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"10:00:00\",\r\n    \"point\": \"8\",\r\n    \"capacity\": 16,\r\n    \"category\": \"Sports\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Annual Art Exhibition\",\r\n    \"description\": \"The Annual Art Exhibition celebrates the extraordinary creativity and innovation of our student artists. Featuring works across a variety of mediums—including painting, sculpture, photography, digital art, and mixed media installations—the exhibition transforms the campus art gallery into a vibrant space of imagination and cultural expression. Students will have the opportunity to display their creations to peers, faculty, and external visitors, fostering a deeper appreciation for the arts within our academic community.\\n\\nThroughout the week, additional activities such as artist talks, live demonstrations, and interactive workshops will take place to enhance the experience. Special recognitions will be awarded for outstanding pieces, as judged by a panel of established artists and curators. Whether you are an artist, an art enthusiast, or simply curious, the Annual Art Exhibition promises to inspire, challenge, and ignite your creative spirit.\",\r\n    \"location\": \"Art Gallery\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"10:00:00\",\r\n    \"point\": \"9\",\r\n    \"capacity\": 200,\r\n    \"category\": \"Arts\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Career Development Workshop\",\r\n    \"description\": \"The Career Development Workshop is tailored to equip students with the practical tools and strategies they need to succeed in the competitive job market. Participants will engage in intensive sessions covering topics such as resume and cover letter writing, personal branding, interview techniques, and effective networking. Led by experienced career coaches and industry professionals, the workshop will provide actionable advice, real-world case studies, and hands-on practice opportunities.\\n\\nIn addition to formal training, attendees will participate in mock interviews and receive personalized resume reviews, gaining critical feedback to sharpen their professional profiles. This workshop is an essential stepping stone for any student preparing for internships, graduate opportunities, or full-time positions. By the end of the event, students will leave with greater confidence, polished application materials, and a clearer vision for their career path.\",\r\n    \"location\": \"Room 202, Business Block\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"13:00:00\",\r\n    \"point\": \"7\",\r\n    \"capacity\": 50,\r\n    \"category\": \"Academic\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Student Council Meeting\",\r\n    \"description\": \"The monthly Student Council Meeting provides an essential forum for student leaders to discuss current issues, review project updates, and plan future activities. Members from each department and club will come together to share progress reports, vote on funding proposals, and brainstorm new initiatives aimed at enhancing campus life. Clear communication and active participation are expected from all council members to ensure effective decision-making.\\n\\nThis meeting also offers an opportunity for members to raise new student concerns, propose changes to existing policies, and strengthen collaboration between different student organizations. All discussions will be formally recorded in meeting minutes and shared with the wider student body. If you are a council member or a student with a proposal or concern, your voice matters—get involved and help shape the future of our campus community.\",\r\n    \"location\": \"Conference Room A\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"15:00:00\",\r\n    \"point\": \"6\",\r\n    \"capacity\": 30,\r\n    \"category\": \"Meeting\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.be.eql(\"success\");\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Event created successfully\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Photography Contest\",\r\n    \"description\": \"The Photography Contest invites all students to capture and share their interpretation of this year’s theme: 'Moments of Joy.' Whether through portraits, landscapes, candid snapshots, or abstract imagery, participants are encouraged to creatively explore what happiness looks like through the lens. Photographs must be original work and submitted digitally by the registration deadline for consideration.\\n\\nA panel of professional photographers and faculty members will judge entries based on creativity, technical quality, and emotional impact. Winning photographs will be awarded certificates and showcased in an online gallery as well as printed exhibits across campus. This contest is an opportunity to build your artistic portfolio, gain recognition, and celebrate the beauty of everyday moments through photography.\",\r\n    \"location\": \"Online Submission\",\r\n    \"startDate\": \"2025-10-01\",\r\n    \"registrationDeadline\": \"2025-10-01\",\r\n    \"startTime\": \"00:00:00\",\r\n    \"point\": \"8\",\r\n    \"capacity\": 100,\r\n    \"category\": \"Other\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "All Events",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get all event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().data.events.length).to.be.eql(6);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"event_id\",pm.response.json().data.events[0].id);\r",
									"pm.environment.set(\"test_event_id\",pm.response.json().data.events[1].id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get event by id\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var temp = pm.environment.get(\"event_id\")\r",
									"    pm.expect(pm.response.json().data.event.id).to.be.eql(temp);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/{{event_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"update event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"// Retrieve the saved \"test_event_id\" value from the variable\r",
									"pm.test(\"Compare response capacity to 100\", function() {\r",
									"    var responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.data.event.capacity).to.equal('100');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"capacity\" : \"100\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events/{{test_event_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{test_event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"delete event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().message).to.eql('Event deleted successfully');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/{{test_event_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{test_event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Publish Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/{{event_id}}/publish",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{event_id}}",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "My Registrations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/registrations/my-registrations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"registrations",
								"my-registrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "My Attendance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendances/my-history",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"attendances",
								"my-history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create QR code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create qrcode\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().data.qrCode.id).to.not.be.null;\r",
									"    pm.environment.set(\"qrcode\", pm.response.json().data.qrCode.code);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/qr/{{event_id}}/generate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"qr",
								"{{event_id}}",
								"generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"checkin\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendances/check-in/{{qrcode}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"attendances",
								"check-in",
								"{{qrcode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Participants",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/{{event_id}}/participants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{event_id}}",
								"participants"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "All Events Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get all event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event By ID Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get all event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var temp = pm.environment.get(\"event_id\");\r",
									"    pm.expect(pm.response.json().data.event.id).to.eql(temp);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/{{event_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"register event\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Registration successful\");\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/registrations/{{event_id}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"registrations",
								"{{event_id}}",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "My Registrations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/registrations/my-registrations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"registrations",
								"my-registrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unregister Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"register event\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().message).to.eql(\"You have successfully unregistered from the event\");\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/registrations/{{event_id}}/unregister",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"registrations",
								"{{event_id}}",
								"unregister"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}